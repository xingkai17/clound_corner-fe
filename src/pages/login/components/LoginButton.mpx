<!-- 登录按钮 -->
<template>
  <div class="login">
    <div class="login-title">协议授权</div>
    <checkbox-group class="login-protocol">
      <IconFont
        :color="!isAuth ? '#C2C2C7' : '#FF6600'"
        :icon-href="isAuth ? 'icon-market-check_active' : 'icon-market-check'"
        @handleClick="changeAuth"
      />

      <div class="desc">
        <div class="desc-title">已阅读并同意以下协议</div>
        <navigator class="login-protocol__a" @click="openPrivacyContract">《小程序隐私保护指引》</navigator>
        <navigator url="/pages/subPagesDoc/agreement/privacy/entry" class="login-protocol__a">《小程序隐私政策》</navigator>
        <navigator url="/pages/subPagesDoc/agreement/user/entry" class="login-protocol__a">《个人信息共享授权书》</navigator>
      </div>
    </checkbox-group>

    <button
      class="login-content__btn"
      :open-type="opentype"
      @click="toLogin()"
      @getphonenumber="getPhoneNumber"
    >一键登录</button>
  </div>
</template>

<script>
import { createComponent } from '@mpxjs/core';
import { getPhoneNumber, getStationList, setBindMerchant } from '@/common/api/login';
import store from '@/store';
import IconFont from 'src/common/components/IconFont/index.vue';
import { isNotEmptyAny } from '@didi/func';

createComponent({
  components: {
    IconFont,
  },
  data: {
    isAuth: false,
    code: '',
    opentype: '',
    uid: '',
  },
  computed: {
    userInfo() {
      return store.state.userInfo;
    },
  },
  async attached() {
    const res = await getStationList({
      merchantId: this.userInfo.merchantId,
    });
    const data = res.data;

    if (isNotEmptyAny(data) && data[0]) {
      await setBindMerchant({ merchantId: data[0].uid });

      this.uid = data[0].uid;
    }
  },
  methods: {
    toLogin() {
      if (this.isAuth) {
        wx.login({
          success: (res) => {
          // code 用户登录凭证（有效期五分钟）。开发者需要在开发者服务器后台调用 code2Session，使用 code 换取 openid、unionid、session_key 等信息
            if (res.code) {
              this.code = res.code;
              console.log('res.code', res.code);
            } else {
              console.log('登录失败！' + res.errMsg);
            }
          },
        });
      } else {
        wx.showToast({
          title: '请勾选协议',
          icon: 'none',
        });
      }
    },
    changeAuth() {
      this.isAuth = !this.isAuth;
      if (this.isAuth) {
        this.opentype = 'getPhoneNumber';
      } else {
        this.opentype = '';
      }
    },
    getPhoneNumber(e) {
      const { iv, encryptedData, code, errMsg } = e.detail;
      if (errMsg === 'getPhoneNumber:ok') {
        const params = {
          authCode: code,
          iv,
          encryptedData,
          'appId': process.env.APPID,
          'grant_type': process.env.GRANT_TYPE,

        };
        wx.showLoading({ title: '加载中' });
        try {
          getPhoneNumber(params).then(async(res) => {
            store.dispatch('updateUserInfo', {
              ...this.userInfo,
              ...res.data,
            });
            console.log('res.mobilePhone = ', res);
            // await postMemberRegisterForStation(params2);
            wx.hideLoading();
            wx.showToast({ title: '登录成功' });
            wx.navigateBack({
              delta: 1,
              success: () => {
                wx.$emit('dispatchLogin', store.getters.getUserInfo);
              },
            });
          }, (err) => {
            wx.hideLoading();
            console.log('err', err);
          });
        } catch (error) {
          wx.hideLoading();
          console.log('error', error);
        }
      }

    },

    openPrivacyContract(e) {
      wx.openPrivacyContract({
        success: () => {}, // 打开成功
        fail: () => {
          wx.showToast({
            title: '打开协议失败',
            icon: 'error',
          });
        }, // 打开失败
        complete: () => {},
      });
    },

  },

});
</script>

<style lang="less" scoped>

.login {
  position: absolute;
  background-color: #fff;
  padding: 40rpx 40rpx;
  border-radius: 32rpx;
  width: 686rpx;
  left: 32rpx;
  bottom: calc(32rpx + constant(safe-area-inset-bottom));
  bottom: calc(32rpx + env(safe-area-inset-bottom));

  &-title {
    font-size: 32rpx;
    color: #363646;
    font-weight: bold;
    text-align: center;
    padding-bottom: 32rpx;
  }

  &-protocol {
    .f-DAJ(row, flex-start, flex-start);
    &__a {
      font-size: 24rpx;
    }
  }


  &-content__btn {
    margin: 64rpx 0 0 0;
    width: 100%;
    background: #FF6600;
    border-radius: 160rpx;
    font-size: 32rpx;
    font-weight: 500;
    color: #FFFFFF;
  }

  .desc {
    .f-DAJ(row, center, flex-start);
    flex-wrap: wrap;
    margin-left: 12rpx;
    &-title {
      font-size: 24rpx;
      color: #72727D;
      display: inline-block;
    }
  }
}

::v-deep .icon-market-check_active {
  color: #FF6600;
}

</style>

<script type="application/json">
{
  "component": true
}
</script>
